name: Mirror Docker Images to CNB

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Select image to mirror (or leave blank to mirror all)'
        required: false
        type: choice
        options:
          - ""
          - vaultwarden
          - bark-server
          - elasticsearch
          - mysql
          - hyperf
          - clickhouse
          - arcane
      version:
        description: 'Override tag version'
        required: false
        type: string
  push:
    paths:
      - '.github/images.yml'
    branches: [ 'main' ]

jobs:
  # 这个 job 用于读取配置并生成一个矩阵
  prepare-matrix:
    name: Prepare Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          # 使用 yq 和 jq 生成 JSON 矩阵
          if [ -n "${{ github.event.inputs.name }}" ]; then
            MATRIX=$(yq -o json '.images[] | select(.name == "${{ github.event.inputs.name }}")' ${{ github.workspace }}/.github/images.yml | jq -c '{ "include": [.] }')
          else
            MATRIX=$(yq -o json '.images' ${{ github.workspace }}/.github/images.yml | jq -c '{ "include": . }')
          fi
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "Generated matrix: $MATRIX"

  # 这个 job 执行实际的镜像同步
  mirror:
    name: Mirror ${{ matrix.name }}
    needs: prepare-matrix
    if: needs.prepare-matrix.outputs.matrix != '{"include":[]}'
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
      fail-fast: false # 如果一个镜像失败，继续同步其他的
    steps:
      - name: Mirror Image
        env:
          # 使用 workflow_dispatch 的输入覆盖 tag，如果提供了的话
          TAG_TO_MIRROR: ${{ github.event.inputs.version || matrix.tag }}
        run: |
          echo "Starting mirror for ${{ matrix.image }}:${{ env.TAG_TO_MIRROR }}"
          
          # --- 关键修复 ---
          # 使用 --network=host 并确保不挂载任何可能污染配置的目录
          # 这将强制 skopeo 容器使用其纯净的内置配置
          # --network=host 有时能解决复杂的网络/注册表解析问题
          # --- 关键修复 ---
          docker run --rm --network=host \
            -e GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            ghcr.io/containers/skopeo:latest \
            copy --all --dest-tls-verify=false \
            docker://${{ matrix.image }}:${{ env.TAG_TO_MIRROR }} \
            docker://docker.cnb.cool/nilpotenter/${{ matrix.name }}:${{ env.TAG_TO_MIRROR }} \
            --dest-creds "cnb:${{ secrets.CNB_DOCKER_TOKEN }}"

          echo "::notice title=Success::Image mirrored to docker.cnb.cool/nilpotenter/${{ matrix.name }}:${{ env.TAG_TO_MIRROR }}"
